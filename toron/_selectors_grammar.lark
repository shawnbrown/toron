// --------------------------------------------------------------------
// Lark grammar for CSS-inspired attribute selectors in Toron.
// --------------------------------------------------------------------
//
// For general information on CSS attribute selectors see:
//
//   https://www.w3.org/TR/selectors-4/#structure
//   https://www.w3.org/TR/selectors-4/#attribute-selectors
//   https://www.w3.org/TR/selectors-4/#matches
//   https://www.w3.org/TR/selectors-4/#negation
//   https://www.w3.org/TR/selectors-4/#zero-matches
//
// --------------------------------------------------------------------

start: selector+ -> compound_selector

selector : "[" attribute [operator value [ignore_case]] "]"
         | ":is(" selector ("," selector)* ")"    -> matches_any
         | ":not(" selector ("," selector)* ")"   -> negation
         | ":where(" selector ("," selector)* ")" -> specificity_adjustment

attribute : IDENTIFIER

!operator : "=" | "~=" | "|=" | "^=" | "$=" | "*="

value : IDENTIFIER | SINGLE_OR_DOUBLE_QUOTED_STRING

ignore_case : "i" | "I"

//
// Define CSS 2.2-style identifier. Follows specification except that
// escaped characters are not allowed. For details, see:
//
//   https://www.w3.org/TR/CSS22/syndata.html#value-def-identifier
//
_FIRST_CHAR : "a".."z" | "A".."Z" | "\u00A0".."\uFFFF" | "_"
_OTHER_CHAR : _FIRST_CHAR | "0".."9" | "-"
IDENTIFIER : "-"? _FIRST_CHAR _OTHER_CHAR* | "-"

//
// Adapted from "lark/grammars/common.lark" for single- and double-quoted
// escaped strings.
//
_STRING_INNER : /.*?/
_STRING_ESC_INNER : _STRING_INNER /(?<!\\)(\\\\)*?/
_DOUBLE_QUOTED_STRING : "\"" _STRING_ESC_INNER "\""
_SINGLE_QUOTED_STRING : "'" _STRING_ESC_INNER "'"
SINGLE_OR_DOUBLE_QUOTED_STRING : _SINGLE_QUOTED_STRING | _DOUBLE_QUOTED_STRING

%import common.WS  // import whitespace
%ignore WS         // ignore whitespace between tokens

