# Run tests for all supported Python versions.
#
# * On `push` this workflow tests Ubuntu, Windows, and macOS.
# * When triggered manually, one specific OS can be selected.

name: Tests

#run-name: "${{ inputs.platform && format('Test {0} on {1}, commit: {2}, timeout: {3} minutes', github.ref_name, inputs.platform, github.sha, inputs.timeout || 10) }}"
run-name: "${{ inputs.platform && format('Test {0}, commit: {1}, timeout: {2} minutes', inputs.platform, github.sha, inputs.timeout || 10) }}"

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Choose platform
        required: true
        default: ubuntu-latest
        options:
          - ubuntu-latest
          - windows-latest
          - macos-13
          #- macos-latest
      timeout:
        type: number
        description: Timeout in minutes
        required: true
        default: 10

jobs:
  run-tox-envs:
    strategy:
      matrix:
        os: ${{ fromJSON(format('["{0}"]', (inputs.platform || 'ubuntu-latest", "windows-latest", "macos-13'))) }}
    name: tox envs on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    timeout-minutes: ${{ inputs.timeout && fromJSON(inputs.timeout) || 10 }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python versions
      uses: actions/setup-python@v5
      with:
        python-version: |
            3.8
            3.9
            3.10
            3.11
            3.12
            3.13.0-alpha.3
            pypy3.9
            pypy3.10
        cache: pip
    - name: Configure tox cache
      uses: actions/cache@v4
      with:
        path: .tox
        key: tox-directory-${{ matrix.os }}-${{ hashFiles('.github/workflows/test.yml', 'pyproject.toml', 'requirements-dev.txt') }}
    - name: Print base Python version
      run: python --version
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install tox
      run: python -m pip install tox>=4.0.0
    - name: Run tests on all tox environments
      #run: python -m tox run-parallel --parallel-no-spinner
      run: python -m tox
