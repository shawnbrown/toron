[build-system]
requires = ["setuptools >= 61.0.0"]
#requires = ["setuptools >= 77.0.0"]  # <- Use after dropping support for 3.7 and 3.8.
build-backend = "setuptools.build_meta"

[project]
name = "toron"
version = "0.0.1"
dependencies = [
  "colorama >= 0.4.6; platform_system == 'Windows'",
  "lark >= 0.10.1",
  "typing_extensions >= 3.10.0.0; python_version < '3.11'",
]
requires-python = ">=3.7"
authors = [
  { name="Shawn Brown", email="shawnbrown@users.noreply.github.com" },
]
description = "Data structures to refine granularity and translate crosswalks."
readme = "README.md"
license = { file = "LICENSE" }
# Use following license keys after dropping support for Python 3.7 and 3.8.
#license = "Apache-2.0"
#license-files = ["LICENSE", "NOTICE"]
classifiers = [
  "Development Status :: 1 - Planning",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: 3 :: Only",
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy',
]

[project.scripts]
toron = "toron.cli:main"

[project.urls]
Homepage = "https://github.com/shawnbrown/toron"

[tool.tox]
legacy_tox_ini = """
  [tox]
  minversion = 4.0.0
  envlist = check_types, check_deps, py3{7,8,9,10,11,12,13,14}, pypy3{9,10}
  skip_missing_interpreters = true
  isolated_build = true

  [testenv]
  package = editable
  deps =
    py3{7,8,9,10,11,12,13,14}: pandas; sys_platform == "linux" or sys_platform == "win32"
    py3{7,8,10,11,12,13,14}: pandas; sys_platform == "darwin"
  commands_pre =
    python --version
    python -c 'import sqlite3; print(f"SQLite {sqlite3.sqlite_version}")'
    python -m pip freeze --local --exclude toron
  commands =
    python -O -W default -m unittest

  [testenv:check_types]
  # Run type checker to verify type hints.
  deps =
    mypy >= 0.990
    pandas
    pandas-stubs
    types-colorama >= 0.4.15; platform_system == 'Windows'
  commands_pre =
    python --version
  commands =
    mypy src/toron

  [testenv:check_deps]
  # Install toron by itself and verify minimum dependencies.
  isolated_build = true
  skip_install = false
  deps =
  commands_pre =
    python --version
  commands =
    python tests/check_dependencies.py

  [testenv:build_dist]
  # Build source-distribution and wheel in the 'dist/' directory.
  skip_install = true
  deps =
    setuptools >= 61.0.0
    build
    twine
  commands =
    python -m build --no-isolation
  commands_post =
    python -m twine check --strict dist/*
"""
